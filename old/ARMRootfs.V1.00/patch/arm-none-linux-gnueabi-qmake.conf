#
# qmake configuration for building with arm-linux-gnueabi-g++
#

MAKEFILE_GENERATOR      = UNIX
TARGET_PLATFORM         = unix
TEMPLATE                = app
CONFIG                  += qt warn_on release incremental link_prl gdb_dwarf_index
QT                      += core gui
QMAKE_INCREMENTAL_STYLE = sublib

include(../common/linux.conf)
include(../common/gcc-base-unix.conf)
include(../common/g++-unix.conf)

# modifications to g++.conf
QMAKE_CC                = arm-none-linux-gnueabi-gcc
QMAKE_CXX               = arm-none-linux-gnueabi-g++
QMAKE_LINK              = arm-none-linux-gnueabi-g++
QMAKE_LINK_SHLIB        = arm-none-linux-gnueabi-g++

# modifications to linux.conf
QMAKE_AR                = arm-none-linux-gnueabi-ar cqs
QMAKE_OBJCOPY           = arm-none-linux-gnueabi-objcopy
QMAKE_STRIP             = arm-none-linux-gnueabi-strip

QMAKE_CFLAGS_RELEASE	= $$(CROSS_FLAGS) 
QMAKE_CXXFLAGS_RELEASE	= $$(CROSS_FLAGS) 
QMAKE_CFLAGS_DEBUG		= $$(CROSS_FLAGS) 
QMAKE_CXXFLAGS_DEBUG	= $$(CROSS_FLAGS) 

QMAKE_RPATHDIR 		+= $$(SDKDIR)/usr/lib
QMAKE_RPATHDIR 		+= .

QMAKE_INCDIR   = $$(SDKDIR)/usr/include $$(SDKDIR)/include
QMAKE_LIBDIR   = $$(SDKDIR)/usr/lib

# message("CFLAGS=$$(CROSS_FLAGS)")

QMAKE_INCDIR_X11 = $$(SDKDIR)/usr/include $$(SDKDIR)/usr/include/freetype2
QMAKE_LIBDIR_X11 = $$(SDKDIR)/usr/lib
# QMAKE_LIBS_X11 = -lxcb -lXau -lX11 -lXrender -lXfixes -lXrandr -lXext -lz -lexpat -lfreetype -lgthread-2.0 -lglib-2.0 -lpng -lSM -lICE -lwrap
QMAKE_LIBS_X11 	 = -lX11 -lXext

QMAKE_INCDIR_OPENGL_ES2 = $$(SDKDIR)/usr/include $$(SDKDIR)/usr/include/GLES2 $$(SDKDIR)/include
QMAKE_LIBDIR_OPENGL_ES2 = $$(SDKDIR)/usr/lib
QMAKE_LIBS_OPENGL_ES2 = -lGLESv2

QMAKE_INCDIR_EGL = $$(SDKDIR)/usr/include
QMAKE_LIBDIR_EGL = $$(SDKDIR)/usr/lib
QMAKE_LIBS_EGL = -lEGL

QMAKE_INCDIR_OPENVG = $$(SDKDIR)/usr/include
QMAKE_LIBDIR_OPENVG = $$(SDKDIR)/usr/lib
QMAKE_LIBS_OPENVG = -lOpenVG 

DEFINES += _LINUX
load(qt_config)
